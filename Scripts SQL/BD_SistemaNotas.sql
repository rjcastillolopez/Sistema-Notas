-- Base de datos db_sistemanotas:

USE MASTER
GO

/* Crear la base de datos db_sistemanotas */
IF EXISTS (
SELECT *
FROM SYS.DATABASES
WHERE NAME = 'db_sistemanotas'
)
BEGIN
    DROP DATABASE db_sistemanotas
END
GO

CREATE DATABASE db_sistemanotas 
GO

USE db_sistemanotas
GO

-- Crear tipos de datos para las claves primarias
USE db_sistemanotas
EXEC SP_ADDTYPE dt_ID_CAREER, 'VARCHAR(3)', 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_STUDENT, 'VARCHAR(6)', 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_CAREER_STUDENT, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_TEACHER, 'VARCHAR(5)', 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_SEMESTER, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_COURSE, 'VARCHAR(9)', 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_SUBJECT, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_STUDENT_COURSE, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_EXAM, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_SUBJECT_EXAM, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_QUESTION_EXAM, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_ALTERNATIVE_QUESTION, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_QUESTION_STUDENT, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_REVIEW, INT, 'NOT NULL'
EXEC SP_ADDTYPE dt_ID_INTERVAL, INT, 'NOT NULL'
GO

/* CREAR LAS TABLAS */

/* Crear la tabla TB_CAREER */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_CAREER'
)
BEGIN
    DROP TABLE TB_CAREER
END
GO

-- TB_CAREER: ID_CAREER, NAME
CREATE TABLE TB_CAREER
(
    ID_CAREER dt_ID_CAREER,
    NAME VARCHAR(50) NOT NULL,

    CONSTRAINT PK_TB_CAREER PRIMARY KEY (ID_CAREER)
)
GO

/* Crear la tabla TB_STUDENT */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_STUDENT'
)
BEGIN
    DROP TABLE TB_STUDENT
END
GO

-- TB_STUDENT: ID_STUDENT, NAME, LASTNAME, DNI, EMAIL, PHONE, ADDRESS, ID_CAREER
CREATE TABLE TB_STUDENT
(
    ID_STUDENT dt_ID_STUDENT,
    NAME VARCHAR (50) NOT NULL,
    LASTNAME VARCHAR (50) NOT NULL,
    DNI VARCHAR (8) NOT NULL,
    EMAIL VARCHAR (50) NOT NULL,
    PHONE VARCHAR (9) NOT NULL,
    ADDRESS VARCHAR (50) NOT NULL,

    CONSTRAINT PK_TB_STUDENT PRIMARY KEY (ID_STUDENT),
)
GO

/* Crear la tabla TB_CAREER_STUDENT */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_CAREER_STUDENT'
)
BEGIN
    DROP TABLE TB_CAREER_STUDENT
END
GO

-- TB_CAREER_STUDENT: ID_CAREER_STUDENT, ID_CAREER, ID_STUDENT
CREATE TABLE TB_CAREER_STUDENT
(
    ID_CAREER_STUDENT dt_ID_CAREER_STUDENT IDENTITY(1,1),
    ID_CAREER dt_ID_CAREER,
    ID_STUDENT dt_ID_STUDENT,

    CONSTRAINT PK_TB_CAREER_STUDENT PRIMARY KEY (ID_CAREER_STUDENT),
    CONSTRAINT FK_TB_CAREER_STUDENT_TB_CAREER FOREIGN KEY (ID_CAREER) REFERENCES TB_CAREER (ID_CAREER),
    CONSTRAINT FK_TB_CAREER_STUDENT_TB_STUDENT FOREIGN KEY (ID_STUDENT) REFERENCES TB_STUDENT (ID_STUDENT)
)
GO

/* Crear la tabla TB_TEACHER */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_TEACHER'
)
BEGIN
    DROP TABLE TB_TEACHER
END
GO

-- TB_TEACHER: ID_TEACHER, NAME, LASTNAME, DNI, EMAIL, PHONE, ADDRESS
CREATE TABLE TB_TEACHER
(
    ID_TEACHER dt_ID_TEACHER,
    NAME VARCHAR(50) NOT NULL,
    LASTNAME VARCHAR(50) NOT NULL,
    DNI VARCHAR(8) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    PHONE VARCHAR(9) NOT NULL,
    ADDRESS VARCHAR(50) NOT NULL,

    CONSTRAINT PK_TB_TEACHER PRIMARY KEY (ID_TEACHER)
)
GO

/* Crear la tabla TB_SEMESTER */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_SEMESTER'
)
BEGIN
    DROP TABLE TB_SEMESTER
END
GO

-- TB_SEMESTER: ID_SEMESTER, NAME, ID_CAREER, ID_COURSE
CREATE TABLE TB_SEMESTER
(
    ID_SEMESTER dt_ID_SEMESTER IDENTITY(1,1),
    DENOMINATION VARCHAR(7),
    DATE_START DATE NOT NULL,
    DATE_END DATE,

    CONSTRAINT PK_TB_SEMESTER PRIMARY KEY (ID_SEMESTER)
)
GO

/* Crear la tabla TB_COURSE */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_COURSE'
)
BEGIN
    DROP TABLE TB_COURSE
END
GO

-- TB_COURSE: ID_COURSE, NAME, ID_TEACHER
CREATE TABLE TB_COURSE
(
    ID_COURSE dt_ID_COURSE,
    NAME VARCHAR(50) NOT NULL,
    ID_TEACHER dt_ID_TEACHER NOT NULL,
    ID_SEMESTER dt_ID_SEMESTER NOT NULL,

    CONSTRAINT PK_TB_COURSE PRIMARY KEY (ID_COURSE),
    CONSTRAINT FK_TB_COURSE_TB_TEACHER FOREIGN KEY (ID_TEACHER) REFERENCES TB_TEACHER (ID_TEACHER),
    CONSTRAINT FK_TB_COURSE_TB_SEMESTER FOREIGN KEY (ID_SEMESTER) REFERENCES TB_SEMESTER (ID_SEMESTER)
)
GO

/* Crear la tabla TB_SUBJECT */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_SUBJECT'
)
BEGIN
    DROP TABLE TB_SUBJECT
END
GO

-- TB_SUBJECT: ID_SUBJECT, ID_COURSE, NAME
CREATE TABLE TB_SUBJECT
(
    ID_SUBJECT dt_ID_SUBJECT IDENTITY (1,1),
    ID_COURSE dt_ID_COURSE,
    NAME VARCHAR(50) NOT NULL,

    CONSTRAINT PK_TB_SUBJECT PRIMARY KEY (ID_SUBJECT),
    CONSTRAINT FK_TB_SUBJECT_TB_COURSE FOREIGN KEY (ID_COURSE) REFERENCES TB_COURSE (ID_COURSE)
)
GO

/* Crear la tabla TB_STUDENT_COURSE */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_STUDENT_COURSE'
)
BEGIN
    DROP TABLE TB_STUDENT_COURSE
END
GO

-- TB_STUDENT_COURSE: ID_STUDENT_COURSE, ID_STUDENT, ID_COURSE, GRADE_1, GRADE_2, GRADE_3, GRADE_4, FINAL
CREATE TABLE TB_STUDENT_COURSE
(
    ID_STUDENT_COURSE dt_ID_STUDENT_COURSE IDENTITY(1,1),
    ID_STUDENT dt_ID_STUDENT NOT NULL,
    ID_COURSE dt_ID_COURSE NOT NULL,
    GRADE_1 DECIMAL(4,2) NOT NULL,
    GRADE_2 DECIMAL(4,2) NOT NULL,
    GRADE_3 DECIMAL(4,2) NOT NULL,
    GRADE_4 DECIMAL(4,2) NOT NULL,
    FINAL DECIMAL(4,2) NOT NULL,

    CONSTRAINT PK_TB_STUDENT_COURSE PRIMARY KEY (ID_STUDENT_COURSE),
    CONSTRAINT FK_TB_STUDENT_COURSE_TB_STUDENT FOREIGN KEY (ID_STUDENT) REFERENCES TB_STUDENT (ID_STUDENT),
    CONSTRAINT FK_TB_STUDENT_COURSE_TB_COURSE FOREIGN KEY (ID_COURSE) REFERENCES TB_COURSE (ID_COURSE)
)
GO

/* Crear la tabla TB_EXAM */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_EXAM'
)
BEGIN
    DROP TABLE TB_EXAM
END
GO

-- TB_EXAM: ID_EXAM, NAME, DATE, DURATION
CREATE TABLE TB_EXAM
(
    ID_EXAM dt_ID_EXAM IDENTITY(1,1),
    NAME VARCHAR(50) NOT NULL,
    DATE DATE NOT NULL,
    DURATION DECIMAL(2,1) NOT NULL,

    CONSTRAINT PK_TB_EXAM PRIMARY KEY (ID_EXAM),
)
GO

/* Crear la tabla TB_SUBJECT_EXAM */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_SUBJECT_EXAM'
)
BEGIN
    DROP TABLE TB_SUBJECT_EXAM
END
GO

-- TB_SUBJECT_EXAM: ID_SUBJECT_EXAM, ID_EXAM, ID_SUBJECT
CREATE TABLE TB_SUBJECT_EXAM
(
    ID_SUBJECT_EXAM dt_ID_SUBJECT_EXAM IDENTITY(1,1),
    ID_EXAM dt_ID_EXAM NOT NULL,
    ID_SUBJECT dt_ID_SUBJECT NOT NULL,

    CONSTRAINT PK_TB_SUBJECT_EXAM PRIMARY KEY (ID_SUBJECT_EXAM),
    CONSTRAINT FK_TB_SUBJECT_EXAM_TB_EXAM FOREIGN KEY (ID_EXAM) REFERENCES TB_EXAM (ID_EXAM),
    CONSTRAINT FK_TB_SUBJECT_EXAM_TB_SUBJECT FOREIGN KEY (ID_SUBJECT) REFERENCES TB_SUBJECT (ID_SUBJECT)
)
GO

/* Crear la tabla TB_QUESTION_EXAM */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_QUESTION_EXAM'
)
BEGIN
    DROP TABLE TB_QUESTION_EXAM
END
GO

-- TB_QUESTION_EXAM: ID_QUESTION_EXAM, ID_EXAM, ID_QUESTION
CREATE TABLE TB_QUESTION_EXAM
(
    ID_QUESTION_EXAM dt_ID_QUESTION_EXAM IDENTITY(1,1),
    ID_EXAM dt_ID_EXAM NOT NULL,
    QUESTION VARCHAR(100) NOT NULL,

    CONSTRAINT PK_TB_QUESTION_EXAM PRIMARY KEY (ID_QUESTION_EXAM),
    CONSTRAINT FK_TB_QUESTION_EXAM_TB_EXAM FOREIGN KEY (ID_EXAM) REFERENCES TB_EXAM (ID_EXAM)
)
GO

/* Crear la tabla TB_ALTERNATIVE_QUESTION */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_ALTERNATIVE_QUESTION'
)
BEGIN
    DROP TABLE TB_ALTERNATIVE_QUESTION
END
GO

-- TB_ALTERNATIVE_QUESTION: ID_QUESTION, ALTERNATIVE, DESCRIPTION, ANSWER
CREATE TABLE TB_ALTERNATIVE_QUESTION
(
    ID_ALTERNATIVE_QUESTION dt_ID_ALTERNATIVE_QUESTION IDENTITY(1,1),
    ID_QUESTION_EXAM dt_ID_QUESTION_EXAM NOT NULL,
    ALTERNATIVE CHAR(1) NOT NULL,
    DESCRIPTION VARCHAR(100) NOT NULL,
    ANSWER BIT NOT NULL,

    CONSTRAINT PK_TB_ALTERNATIVE_QUESTION PRIMARY KEY (ID_ALTERNATIVE_QUESTION),
    CONSTRAINT FK_TB_ALTERNATIVE_QUESTION_TB_QUESTION FOREIGN KEY (ID_QUESTION_EXAM) REFERENCES TB_QUESTION_EXAM (ID_QUESTION_EXAM)
)
GO

/* Crear la tabla TB_QUESTION_STUDENT */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_QUESTION_STUDENT'
)
BEGIN
    DROP TABLE TB_QUESTION_STUDENT
END
GO

-- TB_QUESTION_STUDENT: ID_QUESTION_STUDENT, ID_STUDENT, ID_QUESTION, ALTERNATIVE
CREATE TABLE TB_QUESTION_STUDENT
(
    ID_QUESTION_STUDENT dt_ID_QUESTION_STUDENT IDENTITY(1,1),
    ID_STUDENT dt_ID_STUDENT,
    ID_QUESTION_EXAM dt_ID_QUESTION_EXAM,
    ALTERNATIVE CHAR(1),

    CONSTRAINT PK_TB_QUESTION_STUDENT PRIMARY KEY (ID_QUESTION_STUDENT),
    CONSTRAINT FK_TB_QUESTION_STUDENT_TB_STUDENT FOREIGN KEY (ID_STUDENT) REFERENCES TB_STUDENT (ID_STUDENT),
    CONSTRAINT FK_TB_QUESTION_STUDENT_TB_QUESTION FOREIGN KEY (ID_QUESTION_EXAM) REFERENCES TB_QUESTION_EXAM (ID_QUESTION_EXAM)
)
GO

/* Crear la tabla TB_INTERVAL */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_INTERVAL'
)
BEGIN
    DROP TABLE TB_INTERVAL
END
GO

-- TB_INTERVAL: ID_INTERVAL, DESCRIPTION
CREATE TABLE TB_INTERVAL
(
    ID_INTERVAL dt_ID_INTERVAL IDENTITY(1,1),
    DESCRIPTION VARCHAR(50) NOT NULL,

    CONSTRAINT PK_TB_INTERVAL PRIMARY KEY (ID_INTERVAL)
)
GO

/* Crear la tabla TB_REVIEW */
IF EXISTS (
SELECT *
FROM SYS.TABLES
WHERE NAME = 'TB_REVIEW'
)
BEGIN
    DROP TABLE TB_REVIEW
END
GO

-- TB_REVIEW: ID_REVIEW, ID_STUDENT, ID_SUBJECT, ID_QUESTION, DATE, REPETITION, EASINESS_FACTOR, INTERVAL, NEXT_REVIEW
CREATE TABLE TB_REVIEW
(
    ID_REVIEW dt_ID_REVIEW,
    ID_STUDENT dt_ID_STUDENT,
    ID_QUESTION_EXAM dt_ID_QUESTION_EXAM,
    DATE DATE NOT NULL,
    REPETITION INT NOT NULL,
    EASINESS_FACTOR DECIMAL(2,1) NOT NULL,
    ID_INTERVAL dt_ID_INTERVAL,
    NEXT_REVIEW DATE NOT NULL,

    CONSTRAINT PK_TB_REVIEW PRIMARY KEY (ID_REVIEW),
    CONSTRAINT FK_TB_REVIEW_TB_STUDENT FOREIGN KEY (ID_STUDENT) REFERENCES TB_STUDENT (ID_STUDENT),
    CONSTRAINT FK_TB_REVIEW_TB_QUESTION_EXAM FOREIGN KEY (ID_QUESTION_EXAM) REFERENCES TB_QUESTION_EXAM (ID_QUESTION_EXAM),
    CONSTRAINT FK_TB_REVIEW_TB_INTERVAL FOREIGN KEY (ID_INTERVAL) REFERENCES TB_INTERVAL (ID_INTERVAL),
)
GO